<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ output extension=".cs" #>
<#int maxArg = 16;#>
<#int maxRes = 4;#>
using System;

namespace Linq2d
{

    #region Single result
    public interface IArrayTransform<T, R>: IArray<R>
    {
        Func<T[,], R[,]> Transform { get; }
    }

<#
for(int n=2; n<=maxArg; n++)
{
#>

    public interface IArrayTransform<<#for(int i=0; i<n; i++){ #>T<#= i+1 #>, <# } #>R> : IArray<R>
    {
        Func<<#for(int i=0; i<n; i++){ #>T<#= i+1 #>[,], <# } #>R[,]> Transform { get; }
    }
<#
}
#>
    #endregion


<#
for(int k=2; k<=maxRes; k++)
{
#>

    #region <#=k#> results

    public interface IArrayTransform<#=k#><T, R1<#for(int i=1; i<k; i++){ #>, R<#= i+1 #><# } #>>: IArray<R1<#for(int i=1; i<k; i++){ #>, R<#= i+1 #><# } #>>
    {
        Func<T[,], (R1[,]<#for(int i=1; i<k; i++){ #>, R<#= i+1 #>[,]<# } #>)> Transform { get; }
    }

<#
  for(int n=2; n<=maxArg; n++)
  {
#>

    public interface IArrayTransform<#=k#><<#for(int i=0; i<n; i++){ #>T<#= i+1 #>, <# } #>R1<#for(int i=1; i<k; i++){ #>, R<#= i+1 #><# } #>>: IArray<R1<#for(int i=1; i<k; i++){ #>, R<#= i+1 #><# } #>>
    {
        Func<<#for(int i=0; i<n; i++){ #>T<#= i+1 #>[,], <# } #>(R1[,]<#for(int i=1; i<k; i++){ #>, R<#= i+1 #>[,]<# } #>)> Transform { get; }
    }
<#
  }
#>
    #endregion
<#
}
#>

}